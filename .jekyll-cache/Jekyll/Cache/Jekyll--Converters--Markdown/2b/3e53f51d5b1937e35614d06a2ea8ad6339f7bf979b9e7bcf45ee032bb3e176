I"N<p>Loose notes and bookmarks to fragments of PHP Roundtable panel on DDD with Mathias Verraes, Ross Tuck and Chris Fidao. Whole thing is about 2 hours long, so I decided to make some bookmarks in case I wanted to go back to it or reference it somebody. Unfortunatly I could not find the <a href="https://github.com/PHPRoundtable/show-notes/tree/master/episodes">shownotes or transcript for this episode</a>.</p>

<p>Whole thing can be found under <a href="https://www.phproundtable.com/episode/domain-driven-design-in-php">this URL</a>.</p>

<h2 id="essence-of-ddd-answered-by-m-verraes">Essence of DDD, answered by M. Verraes</h2>
<p><a href="https://youtu.be/CS_22l-LEtM?t=4m00s">4m00s</a></p>

<p>how to explain domain to a MVC user:
<a href="https://youtu.be/CS_22l-LEtM?t=7m26s">7m26s</a></p>

<p>distinction between strategic (understanding the domain) and tactical DDD (implementation, e.g. events) [R. Tuck, M. Verraes]:
<a href="https://youtu.be/CS_22l-LEtM?t=10m8s">10m8s</a></p>

<p>The code that makes money should be the cleanest and the best possible quality.</p>

<p>DDD is not a design pattern. It is a way of thinking about business and transferring that knowledge to code that models the business in a way understandable by a domain expert.</p>

<p>Strengths and weaknesses of DDD [M. Verraes]:
<a href="https://youtu.be/CS_22l-LEtM?t=16m10s">16m10s</a></p>

<h2 id="aggregate">Aggregate</h2>
<p>Is an entity that has been designated to be streamline communication through for a group of VO or entities.</p>

<p>Can be used to define a boundary for transactions.</p>

<p>Aggregate is not strictly part of a domain, because business does not “know” about them. [M. Verraes].</p>

<p>It is a tactical pattern. [R. Tuck].</p>

<h2 id="domain-events">Domain events</h2>
<p>Something that happens that the business would be interested in:
<a href="https://youtu.be/CS_22l-LEtM?t=46m59s">46m59s</a></p>

<h2 id="factories">Factories</h2>
<p>“Objects for pooping out new objects”:
<a href="https://youtu.be/CS_22l-LEtM?t=59m5s">59m5s</a>
It is just about the standard OOP factories.</p>

<h2 id="repositories">Repositories</h2>
<p>Objects for getting objects from persistence layer:
<a href="https://youtu.be/CS_22l-LEtM?t=1h2m0s">1h2m0s</a></p>

<h2 id="hexagonal-architecture">Hexagonal architecture</h2>
<p>Introduction, not too informative and a bit chaotic:
<a href="https://youtu.be/CS_22l-LEtM?t=1h3m30s">1h3m30s</a></p>

<p>Difference between DDD and hexagonal architecture:
<a href="https://youtu.be/CS_22l-LEtM?t=1h7m50s">1h7m50s</a></p>

<p>a slightly more cohesive explanation:
<a href="https://youtu.be/CS_22l-LEtM?t=1h8m29s">1h8m29s</a></p>

<p>Examples of hexagonal architecture and DDD going hand in hand:
<a href="https://youtu.be/CS_22l-LEtM?t=1h9m17s">1h9m17s</a></p>

<p>M. Verraes on the meaning of hexagons :) :
<a href="https://youtu.be/CS_22l-LEtM?t=1h12m45s">1h12m45s</a></p>

<h2 id="post-panel-discussion">Post panel discussion</h2>
<p>2 words about Broadway Framework:
<a href="https://youtu.be/CS_22l-LEtM?t=1h16m38s">1h16m38s</a></p>

<p>Web frameworks versus general design principles:
<a href="https://youtu.be/CS_22l-LEtM?t=1h20m34s">1h20m34s</a></p>

<p>[M. Verraes] Common, simple problem for people transitioning from MVC- to DDD-thinking: structuring directory structure in a way that separates classes by function and not by domain.</p>

<p>[R. Tuck] on splitting application into layers:
<a href="https://youtu.be/CS_22l-LEtM?t=1h36m40s">1h36m40s</a></p>

<p>DDD and REST APIs
<a href="https://youtu.be/CS_22l-LEtM?t=1h38m51s">1h38m51s</a></p>

<p>Switching from CRUD thinking to DDD thinking:
<a href="https://youtu.be/CS_22l-LEtM?t=1h44m00s">1h44m00s</a></p>

<p>Frequent issues with DDD:
<a href="https://youtu.be/CS_22l-LEtM?t=1h48m47s">1h48m47s</a></p>

<p>How to make first step towards building apps in a DDD way:
<a href="https://youtu.be/CS_22l-LEtM?t=1h45m29s">1h45m29s</a></p>

<p>I have omitted a lot the fragments, some on purpose, some by mistake. I really wish they they would edit those things to some more managable and focused format. Still there is a lot interesting stuff in there, so enjoy.</p>
:ET